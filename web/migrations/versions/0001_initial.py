from __future__ import annotations

"""Initial schema

Revision ID: 0001_initial
Revises: 
Create Date: 2025-06-13
"""

from alembic import op
import sqlalchemy as sa
from logging import getLogger

# revision identifiers, used by Alembic.
revision = '0001_initial'
down_revision = None
branch_labels = None
depends_on = None
logger = getLogger(__name__)

def upgrade() -> None:
    """Create all tables based on SQLAlchemy metadata.

    For early-stage projects it's acceptable to use metadata.create_all() to
    bootstrap the database.  Subsequent migrations should be autogenerated
    via `alembic revision --autogenerate` and expressed with explicit op.*
    directives.
    """
    from app.models import Base
    bind = op.get_bind()
    logger.info("Creating tables via metadata.create_all() …")
    Base.metadata.create_all(bind)


def downgrade() -> None:
    """Drop all project tables (danger!)."""
    from app.models import Base
    bind = op.get_bind()
    logger.info("Dropping all project tables via metadata.drop_all() …")
    Base.metadata.drop_all(bind) 