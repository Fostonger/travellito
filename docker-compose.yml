version: "3.8"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build: ./web
    environment:
      BOT_TOKEN:   "${BOT_TOKEN}"
      BOT_ALIAS:   "${BOT_ALIAS}"
      DB_DSN:      "postgresql+asyncpg://admin:secret@db/app"
      SECRET_KEY:  "${SECRET_KEY}"
      STRIPE_SK: "${STRIPE_SK}"
      STRIPE_WH_SEC: "${STRIPE_WH_SEC}"
      WEB_API: "http://web:8000"
      3_ENDPOINT: "minio:9000"
      S3_ACCESS_KEY: "minioadmin"
      S3_SECRET_KEY: "minioadminsecret"
      S3_BUCKET: "tour-images"
    depends_on: [db]
    ports: ["80:8000"]
    restart: unless-stopped

  bot:
    build: ./bot
    environment:
      BOT_TOKEN: "${BOT_TOKEN}"
      WEB_API: "http://web:8000"
      PANEL_URL: "http://localhost:8000/login"
    depends_on: [web]
    restart: unless-stopped
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER:     minioadmin
      MINIO_ROOT_PASSWORD: minioadminsecret
    volumes:
      - minio_data:/data
    ports: ["9000:9000", "9001:9001"]          # 9001 â†’ nice web console
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
  minio_data: