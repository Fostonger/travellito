version: "3.8"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build:
      context: ./web
      args:
        APP_VERSION: "${APP_VERSION:-0.1.0}"
    image: travellito-web:${APP_VERSION:-0.1.0}
    environment:
      BOT_TOKEN:   "${BOT_TOKEN}"
      BOT_ALIAS:   "${BOT_ALIAS}"
      SUPPORT_BOT_TOKEN: "${SUPPORT_BOT_TOKEN}"
      DB_DSN:      "${DB_DSN}"
      SECRET_KEY:  "${SECRET_KEY}"
      SERVER_HOST: "${SERVER_HOST}"
      WEBAPP_URL: "${WEBAPP_URL}"
      S3_ENDPOINT: "${S3_ENDPOINT}"
      PUBLIC_S3_ENDPOINT: "${S3_ENDPOINT}"
      S3_REGION: "ru-central1"
      CORS_ALLOW_ORIGINS: "${CORS_ALLOW_ORIGINS}"
      S3_SECURE: ${S3_SECURE}
      S3_ACCESS_KEY: "${S3_ACCESS_KEY}"
      S3_SECRET_KEY: "${S3_SECRET_KEY}"
      S3_BUCKET: "${S3_BUCKET}"
      METRIKA_COUNTER: "${METRIKA_COUNTER}"
      METRIKA_MP_TOKEN: "${METRIKA_MP_TOKEN}"
    depends_on: [db]
    ports: ["8000:8000"]
    restart: unless-stopped

  bot:
    build:
      context: ./bot
      args:
        APP_VERSION: "${APP_VERSION:-0.1.0}"
    image: travellito-bot:${APP_VERSION:-0.1.0}
    environment:
      BOT_TOKEN: "${BOT_TOKEN}"
      WEBAPP_URL: "${WEBAPP_URL}"
      WEB_API: "${WEB_API}"
      PANEL_URL: "http://localhost:8000/login"
      SECRET_KEY: "${SECRET_KEY}"
      BOT_MODE: "tourist"
    depends_on: [web]
    ports: ["8080:8080"]
    restart: unless-stopped

  support-bot:
    build:
      context: ./bot
      dockerfile: Dockerfile.support
      args:
        APP_VERSION: "${APP_VERSION:-0.1.0}"
    image: travellito-support-bot:${APP_VERSION:-0.1.0}
    environment:
      SUPPORT_BOT_TOKEN: "${SUPPORT_BOT_TOKEN}"
      SUPPORT_BOT_WEBHOOK_URL: "${SUPPORT_BOT_WEBHOOK_URL}"
      WEB_API: "http://web:8000"
    depends_on: [web]
    ports: ["8081:8001"]
    restart: unless-stopped

volumes:
  pgdata:
